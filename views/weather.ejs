<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Weather Forecast</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
  <style>
    body {
      background-color: #f7f9fa;
      padding: 2rem;
    }
    .card {
      margin-bottom: 1rem;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1 class="mb-4">Weather Forecast & Rainfall Info</h1>

    <form id="locationForm" class="mb-4">
      <div class="row g-2">
        <div class="col">
          <input type="text" class="form-control" id="latitude" placeholder="Latitude" required>
        </div>
        <div class="col">
          <input type="text" class="form-control" id="longitude" placeholder="Longitude" required>
        </div>
        <div class="col">
          <button type="submit" class="btn btn-primary">Get Forecast</button>
        </div>
      </div>
    </form>

    <div id="results" style="display: none;">
      <h3>Tomorrow's Forecast</h3>
      <div class="card p-3" id="tomorrowForecast"></div>

      <h3>Weather Warnings</h3>
      <ul class="list-group mb-4" id="warningsList"></ul>

      <h3>Next Week Forecast</h3>
      <div id="nextWeekForecast" class="row"></div>

      <h3>Next 15 Days Forecast</h3>
      <div id="next15Forecast" class="row"></div>
    </div>

    <hr class="my-4">

    <h3>Get Annual Rainfall</h3>
    <button class="btn btn-secondary mb-3" id="rainfallBtn">Fetch Rainfall</button>
    <div id="rainfallResult" class="card p-3" style="display: none;"></div>
  </div>

  <script>
    const form = document.getElementById('locationForm');
    const resultsDiv = document.getElementById('results');
    const tomorrowDiv = document.getElementById('tomorrowForecast');
    const weekDiv = document.getElementById('nextWeekForecast');
    const next15Div = document.getElementById('next15Forecast');
    const warningsList = document.getElementById('warningsList');
    const rainfallBtn = document.getElementById('rainfallBtn');
    const rainfallResult = document.getElementById('rainfallResult');

    let storedCoords = { latitude: null, longitude: null };

    form.addEventListener('submit', async (e) => {
      e.preventDefault();
      const latitude = document.getElementById('latitude').value;
      const longitude = document.getElementById('longitude').value;

      storedCoords.latitude = latitude;
      storedCoords.longitude = longitude;

      const response = await fetch('/get-weather', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ latitude, longitude })
      });

      const data = await response.json();
      if (data.error) {
        alert('Error fetching weather data');
        return;
      }

      resultsDiv.style.display = 'block';

      // Tomorrow
      tomorrowDiv.innerHTML = `
        <strong>Temperature:</strong> ${data.tomorrow.temp.day} °C <br>
        <strong>Weather:</strong> ${data.tomorrow.weather[0].description}
      `;

      // Warnings
      warningsList.innerHTML = '';
      data.warnings.forEach(warning => {
        const li = document.createElement('li');
        li.classList.add('list-group-item', 'list-group-item-warning');
        li.textContent = warning;
        warningsList.appendChild(li);
      });

      // Next Week
      weekDiv.innerHTML = '';
      data.nextWeek.forEach((day, index) => {
        weekDiv.innerHTML += `
          <div class="col-md-3">
            <div class="card p-2">
              <strong>Day ${index + 1}</strong><br>
              Temp: ${day.temp.day} °C<br>
              ${day.weather[0].description}
            </div>
          </div>
        `;
      });

      // Next 15 Days
      next15Div.innerHTML = '';
      data.next15Days.forEach((day, index) => {
        next15Div.innerHTML += `
          <div class="col-md-3">
            <div class="card p-2">
              <strong>Day ${index + 1}</strong><br>
              Temp: ${day.temp.day} °C<br>
              ${day.weather[0].description}
            </div>
          </div>
        `;
      });
    });

    rainfallBtn.addEventListener('click', async () => {
      if (!storedCoords.latitude || !storedCoords.longitude) {
        alert('Please fetch weather forecast first.');
        return;
      }

      const res = await fetch('/get-rainfall', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(storedCoords)
      });

      const data = await res.json();
      if (data.error || !data.rainfall) {
        rainfallResult.innerHTML = `<span class="text-danger">Unable to fetch rainfall data.</span>`;
      } else {
        rainfallResult.innerHTML = `
          <strong>Location:</strong> (${storedCoords.latitude}, ${storedCoords.longitude})<br>
          <strong>Annual Rainfall:</strong> ${data.rainfall} mm
        `;
      }
      rainfallResult.style.display = 'block';
    });
  </script>
</body>
</html>
